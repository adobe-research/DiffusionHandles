[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "diffhandles"
version = "0.1.0"
description = "DiffusionHandles: Enabling 3D Edits for Diffusion Models by Lifting Activations to 3D"
documentation = "https://diffusionhandles.github.io/"
repository = "https://github.com/paulguerrero/diffusionhandles.git"
authors = [
    "Karran Pandey",
    "Paul Guerrero",
    "Matheus Gadelha",
    "Yannick Hold-Geoffroy",
    "Niloy Mitra",
    "Karan Singh",
    ]

[tool.poetry.dependencies]
pip = "*"
python = ">=3.9, <3.11"
torch = ">=2.0, <2.6" # version 2.6 can no longer be installed with conda
torchvision = "*"
trimesh = "*"
numpy = ">=1.24.1, < 2.0" # version 2.0 introduces some breaking changes that are incompatible with albumentations, which is installed by saicinpainting
scipy = "*"
timm = "0.6.12" # required by ZoeDepth (the pretrained weights are for this version and do not work with some later versions)
huggingface-hub = "0.25.2" # diffusers will otherwise install a newer version that is not longer compatible with diffusers
diffusers = "0.23.*" # since we use a custom denoising UNet that we obtain by patching the model in the diffusers library, we need the exact version
opencv-python = "*"
transformers = ">=4.33"
accelerate = "*"
tqdm = ">=4.64.1"
pytorch3d = { git = "https://github.com/facebookresearch/pytorch3d.git" } # for depth mesh rendering
zoedepth = { git = "https://github.com/paulguerrero/ZoeDepth.git", optional = true } # for depth estimation
saicinpainting = { git = "https://github.com/paulguerrero/lama.git", optional = true } # for foreground removal
omegaconf = "*"
imageio = { version = "*", optional = true } # to load exr images
Jinja2 = { version = "*", optional = true } # for generating the test result website
matplotlib = { version = "*", optional = true } # for the transform visualizer jupyter notebook
lang-sam = { git = "https://github.com/paulguerrero/lang-sam", optional = true } # for foreground mask estimation from a text prompt
gradio = { version = "*", optional = true } # for the web app.
fastapi = { version = "*", optional = true } # for the web app
uvicorn = { version = "*", extras = ["standard"], optional = true } # for the web app
gradio_hdrimage = { version = "*", optional = true } # for the web app

[tool.poetry.extras]
test = ["zoedepth", "saicinpainting", "lang-sam", "Jinja2", "matplotlib", "imageio"]
webapp = ["zoedepth", "saicinpainting", "lang-sam", "gradio", "fastapi", "uvicorn", "gradio_hdrimage"]
